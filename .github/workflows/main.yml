name: CI/CD

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/*'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/*'
  workflow_dispatch:

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@master
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Linting code
        run: npm run lint

  SetupEnvironment:
    runs-on: ubuntu-latest
    environment: Prod
    steps:
      - name: Make env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_API_KEY: ${{ vars.API_KEY }}
          envkey_APP_ID: ${{ vars.APP_ID }}
          envkey_AUTH_DOMAIN: ${{ vars.AUTH_DOMAIN }}
          envkey_DATABASE_URL: ${{ vars.DATABASE_URL }}
          envkey_LOCATION_ID: ${{ vars.LOCATION_ID }}
          envkey_MEASUREMENT_ID: ${{ vars.MEASUREMENT_ID }}
          envkey_MESSAGING_SENDER_ID: ${{ vars.MESSAGING_SENDER_ID }}
          envkey_STORAGE_BUCKET: ${{ vars.STORAGE_BUCKET }}
          envkey_TEST: ${{ vars.TEST }}
      - name: Upload env file
        uses: actions/upload-artifact@v3
        with:
          name: env-file
          path: .env

  Build:
    runs-on: ubuntu-latest
    needs: [Lint, SetupEnvironment]
    steps:
      - name: Get repository code
        uses: actions/checkout@master
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Download env file
        uses: actions/download-artifact@v3
        with:
          name: env-file
      - name: Build artifact
        run: npm run build --prod
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: public

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Get repository code
        uses: actions/checkout@master
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: public
      - name: Deploy angular app to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.firebase_token }}
